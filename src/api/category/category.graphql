type Category {
  id: ID!
  groupId: Group
  rooms: [Room!]
  name: String!
  categoryParticipants: [CategoryParticipant!]
  createUser: User
}

type CategoryParticipant {
  id: ID!
  categoryId: Category
  userId: User
  name: String!
}

input CategoryCreateInput {
  id: ID
  groupId: String!
  name: String!
  userId: String!
}

input CategoryParticipantCreateInput {
  id: ID
  categoryId: String!
  userId: String!
  name: String!
}

input CategoryUpdateInput {
  id: ID!
  name: String!
  categoryParticipants: [CategoryParticipantCreateInput!]
}

input CategoryWhereUniqueInput {
  id: ID
}

type Query {
  categories: [Category]!
  category(id: ID): Category
}

type Mutation {
  createCategory(data: CategoryCreateInput!): Category!
  createCategoryParticipant(
    data: CategoryParticipantCreateInput!
  ): CategoryParticipant!
  updateCategory(data: CategoryUpdateInput!): Category!
  deleteCategory(id: ID!): Category
}
