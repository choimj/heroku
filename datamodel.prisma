type User {
  id: ID! @id 
  email: String! @unique
  name: String!
  password: String!
  groups: [GroupParticipant] @relation(onDelete: CASCADE)
}

type Session {
  id: ID! @id
  email: String! @unique  
  token: String! @unique  
}

type Group {
  id: ID! @id
  categories: [Category] @relation(onDelete: CASCADE)
  name: String!
  groupParticipants: [GroupParticipant] @relation(onDelete: CASCADE)
}

type GroupParticipant {
  id: ID! @id
  groupId: Group 
  userId: User 
  name: String!
}

type Category {
  id: ID! @id
  groupId: Group
  rooms: [Room] @relation(onDelete: CASCADE)
  name: String!
  categoryParticipants: [CategoryParticipant] @relation(onDelete: CASCADE)
}

type CategoryParticipant {
  id: ID! @id
  categoryId: Category 
  userId: User 
  name: String!
}

type Room {
  id: ID! @id
  groupId: Group
  categoryId: Category
  name: String!
  startTime: String!
  endTime: String!
  minPerson: Int!
  location: String
}

type Booking {
  id: ID! @id
  groupId: Group
  categoryId: Category
  date: String!
  startTime: String!
  endTime: String!
  title: String!
  department: String!
  name: String!
  bookingParticipants: [bookingParicipants] @relation(onDelete: CASCADE)
}

type bookingParicipants {
  id: ID! @id
  bookingId: Booking 
  userId: User 
  name: String!
}

